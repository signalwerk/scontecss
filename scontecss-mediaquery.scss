// ----------------------------------------------------------------------------
// mediaquery handling
// ----------------------------------------------------------------------------

@mixin scontecss-mediaquery($var, $definition, $defaultkey: 'default') {
  // set value for mediaqueries
  @each $breakpoint, $value in $breakpoints {
    @if($breakpoint == $defaultkey){
      // set default value
      @include scontecss(map-get($var, $breakpoint), $definition);
    }
    @else {
      // set the value with a mediaquery
      @media screen and (min-width: $value) {
        @include scontecss(map-get($var, $breakpoint), $definition);
      }
    }
  }
}

@mixin scontecss-to($width, $warn: true) {
  @if $warn {
    @warn "ðŸ™„ mobile first!";
  }
  @media screen and (max-width: $width - ($width * 0 + 0.01) ) {
    @content;
  }
}

@mixin scontecss-from($width) {
  @media screen and (min-width: $width) {
    @content;
  }
}

// shorthands wit $breakpoints map
@mixin to($viewportselector, $warn: true) {
  $width: map-get($breakpoints, $viewportselector);
  @include scontecss-from($width) {
    @content;
  }
}

@mixin from($viewportselector) {
  $width: map-get($breakpoints, $viewportselector);
  @include scontecss-from($width) {
    @content;
  }
}
