@mixin mediaquery-scontecss($var, $definition, $defaultkey: 'default') {
  // set value for mediaqueries
  @each $breakpoint, $value in $breakpoints {
    @if($breakpoint == $defaultkey){
      // set default value
      @include scontecss(map-get($var, $breakpoint), $definition);
    }
    @else {
      @include mediaquery($min, $value) {
        @include scontecss(map-get($var, $breakpoint), $definition);
      }
    }
  }
}

// ----------------------------------------------------------------------------
// Define mediaquery(){}
// ----------------------------------------------------------------------------
// @include mediaquery($min, $width) { ... };    â†’ minimal breakpoint
// @include mediaquery($max, $width) { ... };    â†’ maximal until before breakpoint

// Constraints
$min: min-width;
$max: max-width;

@mixin mediaquery($constraint, $width) {
  @if $constraint == $min {
    @media screen and ($min: $width) {
      @content;
    }
  } @else if $constraint == $max {
    @media screen and ($max: $width - ($width * 0 + 0.01) ) {
      @content;
    }
  }
}
// shorthand
@mixin to($viewportselector, $warn: true) {
  @if $warn {
    @warn "ðŸ™„ mobile first!";
  }
  $viewport: map-get($breakpoints, $viewportselector);
  @include mediaquery($max, $viewport) {
    @content;
  }
}
// shorthand
@mixin from($viewportselector) {
  $viewport: map-get($breakpoints, $viewportselector);
  @include mediaquery($min, $viewport) {
    @content;
  }
}
